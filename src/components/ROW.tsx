import React from "react";

import { View } from "react-native";
interface RowType {
  key?: string,
  row?: boolean,
  rowr?: boolean,
  wrap?: boolean,
  fl?: number | boolean,
  children?: Element[] | any,
  aligncenter?: boolean,
  justifycenter?: boolean,
  justifybetween?: boolean,
  justifyevenly?: boolean,
  alignstart?: boolean,
  alingend?: boolean,
  justifyend?: boolean,
  justifystart?: boolean,
  justifyaround?: boolean,
  pr?: number,
  p?: number,
  m?: number,
  pl?: number,
  pt?: number,
  ph?: number,
  pv?: number,
  pb?: number,
  mr?: number,
  ml?: number,
  mt?: number,
  bc?: string,
  mh?: number,
  mv?: number,
  mb?: number,
  bg?: string,
  bw?: number,
  w?: number | string,
  h?: number | string,
  br?: number,
  bbr?: number,
  bbl?: number,
  btr?: number,
  btl?: number,
  shadow?: string,
  bottom?: number,
  top?: number,
  left?: number,
  right?: number,
  bs?: string,
  style?: any,
  justifyAround?: boolean,
  alignSelf?: boolean,
  pointerEvents?: any
}
const ROW = (
  {
    row,
    rowr,
    wrap,
    fl,
    children,
    aligncenter,
    justifycenter,
    justifybetween,
    justifyaround,
    alignstart,
    alingend,
    justifyend,
    justifystart,
    pr,
    p,
    m,
    pl,
    pt,
    ph,
    pv,
    pb,
    mr,
    ml,
    mt,
    bc,
    mh,
    mv,
    mb,
    bg,
    bw,
    w,
    h,
    br,
    style,
  }: RowType,
  ...props
) => {
  return (
    <View
      {...props}
      style={[
        row && { flexDirection: "row" },
        rowr && { flexDirection: "row-reverse" },
        fl && { flex: 1 },
        bg && { backgroundColor: bg },
        w && { width: w },
        br && { borderRadius: br },
        h && { height: h },
        p && { padding: p },
        pr && { paddingRight: pr },
        pl && { paddingLeft: pl },
        pt && { paddingTop: pt },
        pb && { paddingBottom: pb },
        ph && { paddingHorizontal: ph },
        pv && { paddingVertical: pv },
        m && { padding: m },
        mr && { marginRight: mr },
        ml && { marginLeft: ml },
        mt && { marginTop: mt },
        mb && { marginBottom: mb },
        mh && { marginHorizontal: mh },
        mv && { marginVertical: mv },
        bw && { borderWidth: bw },
        bc && { borderColor: bc },
        wrap && { flexWrap: "wrap" },
        aligncenter && { alignItems: "center" },
        alignstart && { alignItems: "flex-start" },
        alingend && { alignItems: "flex-end" },
        justifycenter && { justifyContent: "center" },
        justifystart && { justifyContent: "flex-start" },
        justifyend && { justifyContent: "flex-end" },
        justifybetween && { justifyContent: "space-between" },
        justifyaround && { justifyContent: "space-around" },
        style,
      ]}
    >
      {children}
    </View>
  );
};

export default (ROW);
